// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace BitacoraAPI.Models;

public partial class bitacora_dbContext : DbContext
{
    public bitacora_dbContext(DbContextOptions<bitacora_dbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Cuenta> Cuentas { get; set; }

    public virtual DbSet<TiposTrade> TiposTrades { get; set; }

    public virtual DbSet<Trade> Trades { get; set; }

    public virtual DbSet<Usuario> Usuarios { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Cuenta>(entity =>
        {
            entity.HasKey(e => e.IdCuenta).HasName("PK__cuentas__C7E28685521D1C90");

            entity.ToTable("cuentas");

            entity.Property(e => e.IdCuenta).HasColumnName("id_cuenta");
            entity.Property(e => e.Empresa)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("empresa");
            entity.Property(e => e.FechaCreacion).HasColumnName("fecha_creacion");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.Tamanio)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("tamanio");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.Cuenta)
                .HasForeignKey(d => d.IdUsuario)
                .HasConstraintName("FK__cuentas__id_usua__398D8EEE");
        });

        modelBuilder.Entity<TiposTrade>(entity =>
        {
            entity.HasKey(e => e.IdTipoTrade).HasName("PK__tipos_tr__849AF4E22902B8D7");

            entity.ToTable("tipos_trades");

            entity.Property(e => e.IdTipoTrade).HasColumnName("id_tipo_trade");
            entity.Property(e => e.TipoTrade)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("tipo_trade");
        });

        modelBuilder.Entity<Trade>(entity =>
        {
            entity.HasKey(e => e.IdTrade).HasName("PK__trades__7F2A9F16C3C1BCFC");

            entity.ToTable("trades");

            entity.Property(e => e.IdTrade).HasColumnName("id_trade");
            entity.Property(e => e.DineroPnl)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("dinero_pnl");
            entity.Property(e => e.Divisa)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("divisa");
            entity.Property(e => e.FechaEntrada)
                .HasColumnType("datetime")
                .HasColumnName("fecha_entrada");
            entity.Property(e => e.FechaSalida)
                .HasColumnType("datetime")
                .HasColumnName("fecha_salida");
            entity.Property(e => e.IdCuenta).HasColumnName("id_cuenta");
            entity.Property(e => e.IdTipoTrade).HasColumnName("id_tipo_trade");
            entity.Property(e => e.Margin)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("margin");
            entity.Property(e => e.Nota)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nota");
            entity.Property(e => e.PorcentajePnl)
                .HasColumnType("decimal(15, 2)")
                .HasColumnName("porcentaje_pnl");
            entity.Property(e => e.PrecioEntrada)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("precio_entrada");
            entity.Property(e => e.PrecioSalida)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("precio_salida");
            entity.Property(e => e.Riesgo)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("riesgo");
            entity.Property(e => e.StopLoss)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("stop_loss");
            entity.Property(e => e.TakeProfit)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("take_profit");
            entity.Property(e => e.TradePips).HasColumnName("trade_pips");

            entity.HasOne(d => d.IdCuentaNavigation).WithMany(p => p.Trades)
                .HasForeignKey(d => d.IdCuenta)
                .HasConstraintName("FK__trades__id_cuent__3E52440B");

            entity.HasOne(d => d.IdTipoTradeNavigation).WithMany(p => p.Trades)
                .HasForeignKey(d => d.IdTipoTrade)
                .HasConstraintName("FK__trades__id_tipo___3F466844");
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.HasKey(e => e.IdUsuario).HasName("PK__usuarios__4E3E04AD5C83C09E");

            entity.ToTable("usuarios");

            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.Apellido)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("apellido");
            entity.Property(e => e.Contrasena)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("contrasena");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.Usuario1)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("usuario");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}